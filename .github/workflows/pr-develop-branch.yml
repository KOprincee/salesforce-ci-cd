# Unique name for this workflow
name: Validate the changes made in the Pull Request.

# Definition when the workflow should run
on:
    pull_request:
      types: [opened, synchronize]
      branches: [ development ]
      paths:
        - 'force-app/**'

# Jobs to be executed
jobs:
    validate-changes-on-QA-org:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
                
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              uses: sfdx-actions/setup-sfdx@v1
              with:
                sfdx-version: 'latest'

            # # Install java as it is required for the next step
            # - name: 'Install Java'
            #   uses: actions/setup-java@v2
            #   with:
            #     distribution: 'adopt'
            #     java-version: '11'

            # # Install SFDX scanner
            # - name: 'Installing SFDX scanner'
            #   run: sfdx plugins:install @salesforce/sfdx-scanner@latest

            # - name: 'Scan code'
            #   run: |
            #       sfdx scanner:run --target './**/*.cls' --format csv --engine pmd,eslint --outfile 'apexScanResults.csv' --severity-threshold 2

            # - name: 'Try to read the file'
            #   run: |
            #       while IFS= read -r line; do
            #           echo "$line"
            #       done < apexScanResults.csv

            # - name: 'Scan code'
            #   run: |
            #       sfdx scanner:run --target './**/*.cls' --format sarif --engine pmd,eslint --outfile 'apexScanResults.sarif' --severity-threshold 2
                  
            # # Now we upload the .sarif file and the plugin will check for any violations
            # - name: Upload SARIF file
            #   uses: github/codeql-action/upload-sarif@v3
            #   with:
            #     sarif_file: apexScanResults.sarif

            # Store secret for both otgs
            - name: 'Populate auth file with SFDX_URL secret of the QA'
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt

            # Authenticate to org
            - name: 'Authenticate to Integration Org'
              run: sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a QA

            - name: 'Deploy changes present in package.xml'
              run: sfdx force:source:deploy --manifest package.xml --checkonly --testlevel RunSpecifiedTests --runtests ${{env.APEX_TESTS}}


